{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"提交\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_main = _resolveComponent(\"el-main\");\n\n  const _component_el_container = _resolveComponent(\"el-container\");\n\n  return _openBlock(), _createBlock(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_main, {\n      style: {\n        \"margin-top\": \"inherit\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        model: $data.ruleForm,\n        \"status-icon\": \"\",\n        rules: $data.rules,\n        ref: \"ruleForm\",\n        \"label-width\": \"100px\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"密码\",\n          prop: \"pass\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: $data.ruleForm.pass,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.pass = $event),\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          label: \"确认密码\",\n          prop: \"checkPass\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: $data.ruleForm.checkPass,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.checkPass = $event),\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, {\n          label: \"年龄\",\n          prop: \"age\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.ruleForm.age,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.age = $event),\n            modelModifiers: {\n              number: true\n            }\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: _cache[3] || (_cache[3] = $event => $options.submitForm('ruleForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_1]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_button, {\n            onClick: _cache[4] || (_cache[4] = $event => $options.resetForm('ruleForm'))\n          }, {\n            default: _withCtx(() => [_hoisted_2]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\", \"rules\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;iDAcoE;;iDAChB;;;;;;;;;;;;;;;uBAdhDA,aAkBeC,uBAlBf,EAkBe,IAlBf,EAkBe;sBAjBb,MAgBU,CAhBVC,aAgBUC,kBAhBV,EAgBU;MAhBDC,KAA2B,EAA3B;QAAA;MAAA;IAgBC,CAhBV,EAAoC;wBACpC,MAcU,CAdVF,aAcUG,kBAdV,EAcU;QAdAC,KAAK,EAAEC,cAcP;QAdiB,iBAcjB;QAd8BC,KAAK,EAAED,WAcrC;QAd4CE,GAAG,EAAC,UAchD;QAd2D,eAAY,OAcvE;QAd+EC,KAAK,EAAC;MAcrF,CAdV;0BACE,MAEe,CAFfR,aAEeS,uBAFf,EAEe;UAFDC,KAAK,EAAC,IAEL;UAFUC,IAAI,EAAC;QAEf,CAFf;4BACE,MAAgF,CAAhFX,aAAgFY,mBAAhF,EAAgF;YAAtEC,IAAI,EAAC,UAAiE;wBAA7CR,eAASS,IAAoC;uEAA7CT,eAASS,OAAIC,OAAgC;YAA9BC,YAAY,EAAC;UAAiB,CAAhF;;UAAA,iBAAgF;;;;SADlF,CAEe,EACfhB,aAEeS,uBAFf,EAEe;UAFDC,KAAK,EAAC,MAEL;UAFYC,IAAI,EAAC;QAEjB,CAFf;4BACE,MAAqF,CAArFX,aAAqFY,mBAArF,EAAqF;YAA3EC,IAAI,EAAC,UAAsE;wBAAlDR,eAASY,SAAyC;uEAAlDZ,eAASY,YAASF,OAAgC;YAA9BC,YAAY,EAAC;UAAiB,CAArF;;UAAA,iBAAqF;;;;SADvF,CADe,EAIfhB,aAEeS,uBAFf,EAEe;UAFDC,KAAK,EAAC,IAEL;UAFUC,IAAI,EAAC;QAEf,CAFf;4BACE,MAAmD,CAAnDX,aAAmDY,mBAAnD,EAAmD;wBAAzBP,eAASa,GAAgB;uEAAzBb,eAASa,MAAGH,OAAa;4BAAzC;cAAAI;YAAA;UAAyC,CAAnD;;UAAA,iBAAmD;;;;SADrD,CAJe,EAOfnB,aAGeS,uBAHf,EAGe,IAHf,EAGe;4BAFb,MAAwE,CAAxET,aAAwEoB,oBAAxE,EAAwE;YAA7DP,IAAI,EAAC,SAAwD;YAA7CQ,OAAK,sCAAEC,oBAAU,UAAV,CAAF;UAAwC,CAAxE;8BAA0D,MAAE;;;;WAA5D,CAAwE,EACxEtB,aAAwDoB,oBAAxD,EAAwD;YAA5CC,OAAK,sCAAEC,mBAAS,UAAT,CAAF;UAAuC,CAAxD;8BAA0C,MAAE;;;;WAA5C,CADwE,EAE3D;;;;QAAA,CAHf,CAPe;;;;OAHjB;;MAAA,qBAcU,EAf0B;;;;IAAA,CAApC,CAgBU,EACG;;;;EAAA,CAlBf","names":["_createBlock","_component_el_container","_createVNode","_component_el_main","style","_component_el_form","model","$data","rules","ref","class","_component_el_form_item","label","prop","_component_el_input","type","pass","$event","autocomplete","checkPass","age","number","_component_el_button","onClick","$options"],"sourceRoot":"","sources":["/Users/wangjin/Desktop/newspublisher/Vue/src/views/login.vue"],"sourcesContent":["<template>\n    <el-container >\n      <el-main style=\"margin-top: inherit\">\n      <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"密码\" prop=\"pass\">\n          <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\n          <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"年龄\" prop=\"age\">\n          <el-input v-model.number=\"ruleForm.age\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      </el-main>\n    </el-container>\n</template>\n\n<script>\nexport default {\n  name: \"loGin\",\n  components :{\n\n  },\n  data() {\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('年龄不能为空'));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (value < 18) {\n            callback(new Error('必须年满18岁'));\n          } else {\n            callback();\n          }\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: '',\n        age: ''\n      },\n      rules: {\n        pass: [\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPass: [\n          { validator: validatePass2, trigger: 'blur' }\n        ],\n        age: [\n          { validator: checkAge, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      alert(1)\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}