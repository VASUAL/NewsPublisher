{"ast":null,"code":"import HeadOfWelcome from \"../components/HeadOfWelcome\";\nimport request from \"../utils/request\";\nimport { ElMessage } from 'element-plus'; //Element-plus消息提示\n\nlet verify; //验证码\n\nlet inputEmail; //用户输入的邮箱\n\nlet state; //用户是登录还是注册\n\nexport default {\n  name: \"UserLogin\",\n  components: {\n    HeadOfWelcome\n  },\n\n  data() {\n    return {\n      ruleForm: {\n        email: '',\n        verifyCode: ''\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }],\n        verifyCode: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n\n  created() {},\n\n  methods: {\n    //发送验证码\n    sendVerifyCode() {\n      if (this.ruleForm.email === '' || this.ruleForm.email === null) {\n        //如果邮箱为空\n        ElMessage({\n          //消息提示\n          type: \"warning\",\n          message: \"请输入邮箱\"\n        });\n      } else {\n        inputEmail = this.ruleForm.email;\n        request.post(\"/user/sendEmail\", this.ruleForm.email).then(res => {\n          ElMessage({\n            //消息提示\n            type: \"success\",\n            message: \"获取成功，请查收\"\n          });\n          verify = res.data;\n          state = res.msg;\n        });\n      }\n    },\n\n    //提交表单\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //如果表单不空\n          if (inputEmail !== this.ruleForm.email) {\n            ElMessage({\n              //消息提示\n              type: \"warning\",\n              message: \"请重新获取验证码\"\n            });\n          } else if (verify !== this.ruleForm.verifyCode) {\n            //获取表单中的数据要通过 ”this.ruleForm.属性“ 来实现\n            ElMessage({\n              //消息提示\n              type: \"warning\",\n              message: \"验证码错误\"\n            });\n          } else {\n            sessionStorage.setItem(\"userEmail\", JSON.stringify(this.ruleForm.email)); //将管理员的邮箱存储在session里\n\n            if (state === \"登录\") {\n              ElMessage({\n                //消息提示\n                type: \"success\",\n                message: \"登录成功\"\n              });\n              this.$router.push('/'); //回到首页\n            } else {\n              request.post(\"/user/logon\", this.ruleForm).then(res => {\n                ElMessage({\n                  //消息提示\n                  type: \"success\",\n                  message: \"注册成功，请完善个人信息\"\n                });\n                this.$router.push('/finishUserInfo');\n              });\n            }\n          }\n        } else {\n          //如果表单为空\n          return false;\n        }\n      });\n    },\n\n    //重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["HeadOfWelcome","request","ElMessage","verify","inputEmail","state","name","components","data","ruleForm","email","verifyCode","rules","required","message","trigger","created","methods","sendVerifyCode","type","post","then","res","msg","submitForm","formName","$refs","validate","valid","sessionStorage","setItem","JSON","stringify","$router","push","resetForm","resetFields"],"sourceRoot":"","sources":["/Users/wangjin/Desktop/newspublisher/Vue/src/layout/UserLogin.vue"],"sourcesContent":["<template>\n  <!--头部-->\n  <HeadOfWelcome/>\n  <div class=\"dF\">\n    <p class=\"p1\">用户登录</p>\n    <p class=\"p2\">首次登录即自动注册</p>\n    <div class=\"dS\">\n      <el-form\n          ref=\"ruleForm\"\n          :model=\"ruleForm\"\n          :rules=\"rules\"\n          label-width=\"80px\"\n          class=\"demo-ruleForm\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"ruleForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"verifyCode\">\n          <el-input v-model=\"ruleForm.verifyCode\" class=\"el1\"></el-input>\n          <el-button type=\"primary\" @click=\"sendVerifyCode()\" class=\"el2\">获取验证码</el-button>\n        </el-form-item>\n        <el-form-item class=\"el3\">\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" class=\"el4\">登录</el-button>\n          <el-button @click=\"resetForm('ruleForm')\" class=\"el5\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HeadOfWelcome from \"../components/HeadOfWelcome\";\nimport request from \"../utils/request\";\nimport { ElMessage } from 'element-plus'   //Element-plus消息提示\n\nlet verify;   //验证码\nlet inputEmail;   //用户输入的邮箱\nlet state;  //用户是登录还是注册\n\nexport default {\n  name: \"UserLogin\",\n  components: {HeadOfWelcome},\n\n  data() {\n    return {\n      ruleForm: {\n        email: '',\n        verifyCode: '',\n      },\n      rules: {\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n        verifyCode: [\n          {\n            required: true,\n            message: '请输入验证码',\n            trigger: 'change',\n          },\n        ],\n      },\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    //发送验证码\n    sendVerifyCode() {\n      if (this.ruleForm.email===''||this.ruleForm.email===null){  //如果邮箱为空\n        ElMessage({    //消息提示\n          type: \"warning\",\n          message: \"请输入邮箱\"\n        })\n      }else {\n        inputEmail = this.ruleForm.email\n        request.post(\"/user/sendEmail\",this.ruleForm.email).then(res =>{\n          ElMessage({    //消息提示\n            type: \"success\",\n            message: \"获取成功，请查收\"\n          })\n          verify = res.data\n          state = res.msg\n        })\n      }\n    },\n    //提交表单\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {    //如果表单不空\n          if (inputEmail!==this.ruleForm.email) {\n            ElMessage({    //消息提示\n              type: \"warning\",\n              message: \"请重新获取验证码\"\n            })\n          }else if (verify!==this.ruleForm.verifyCode) {  //获取表单中的数据要通过 ”this.ruleForm.属性“ 来实现\n            ElMessage({    //消息提示\n              type: \"warning\",\n              message: \"验证码错误\"\n            })\n          }else {\n            sessionStorage.setItem(\"userEmail\", JSON.stringify(this.ruleForm.email));  //将管理员的邮箱存储在session里\n            if (state===\"登录\") {\n              ElMessage({    //消息提示\n                type: \"success\",\n                message: \"登录成功\"\n              })\n              this.$router.push('/')  //回到首页\n            }else {\n              request.post(\"/user/logon\",this.ruleForm).then(res =>{\n                ElMessage({    //消息提示\n                  type: \"success\",\n                  message: \"注册成功，请完善个人信息\"\n                })\n                this.$router.push('/finishUserInfo')\n              })\n            }\n          }\n        } else {            //如果表单为空\n          return false\n        }\n      })\n    },\n    //重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n</script>\n\n<style scoped>\n.dF{\n  background: white;position: absolute;width: 100%;left: 50%;top: calc(50% + 25px);transform: translate(-50%,-50%);height: calc(100% - 50px);\n}\n.p1{\n  text-align: center;font-size: 22px;color: rgb(64, 158, 255);position: absolute;left: 30%;right: 30%;width: 40%;margin-top: 70px;padding: 10px;\n}\n.p2{\n  text-align: center;font-size: 14px;color: rgb(64, 158, 255);position: absolute;left: 30%;right: 30%;width: 40%;margin-top: 110px;padding: 10px;\n}\n.dS{\n  position: absolute;left: 33%;width: 30%;right: 35%;margin-top: 160px;\n}\n.el1{\n  width: 45%;margin-right: 5%;\n}\n.el2{\n  width: 50%;\n}\n.el3{\n  display:block;\n}\n.el4{\n  width: 40%;\n}\n.el5{\n  width: 40%;margin-left: 20%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}