{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e426040\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"新增板块\");\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sp1\"\n}, \"提示：0代表固定板块，1代表可变板块\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"dF\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"修改\");\n\nconst _hoisted_6 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_9 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"是否确认删除该板块？\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_15 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    class: \"el1\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.add())\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    class: \"el2\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"板块名\",\n      width: \"300\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"newsNumber\",\n      label: \"新闻数量\",\n      width: \"300\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"state\",\n      label: \"板块状态\",\n      width: \"300\",\n      align: \"center\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"\",\n      align: \"center\",\n      key: \"slot\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"text\",\n        size: \"big\",\n        onClick: $event => this.delete(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"text\",\n        size: \"big\",\n        onClick: $event => this.edit(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"]), _createCommentVNode(\"分页组件\"), _createVNode(_component_el_pagination, {\n    background: \"\",\n    layout: \"total, prev, pager, next\",\n    total: $data.total,\n    \"page-size\": $data.pageSize,\n    currentPage: $data.currentPage,\n    \"onUpdate:currentPage\": _cache[1] || (_cache[1] = $event => $data.currentPage = $event),\n    onCurrentChange: $options.handleCurrentChange,\n    class: \"el3\"\n  }, null, 8\n  /* PROPS */\n  , [\"total\", \"page-size\", \"currentPage\", \"onCurrentChange\"])]), _createCommentVNode(\"新增板块弹窗，点击新增时才显示\"), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogFormVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.dialogFormVisible = $event),\n    title: \"新增板块\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_6, [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $data.dialogFormVisible = false)\n    }, {\n      default: _withCtx(() => [_hoisted_7]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.conformAdd())\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.form\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"板块名\",\n        \"label-width\": $data.formLabelWidth\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.name,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.name = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"label-width\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createCommentVNode(\"修改板块弹窗，点击修改时才显示\"), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogFormVisibleForEdit,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.dialogFormVisibleForEdit = $event),\n    title: \"修改板块\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_9, [_createVNode(_component_el_button, {\n      onClick: _cache[9] || (_cache[9] = $event => $data.dialogFormVisibleForEdit = false)\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[10] || (_cache[10] = $event => $options.conformEdit())\n    }, {\n      default: _withCtx(() => [_hoisted_11]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.formForEdit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"原板块名\",\n        \"label-width\": $data.formLabelWidth\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.formForEdit.oldName,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.formForEdit.oldName = $event),\n          autocomplete: \"off\",\n          disabled: \"true\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"label-width\"]), _createVNode(_component_el_form_item, {\n        label: \"新板块名\",\n        \"label-width\": $data.formLabelWidth\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.formForEdit.newName,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.formForEdit.newName = $event),\n          autocomplete: \"off\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"label-width\"]), _createVNode(_component_el_form_item, {\n        label: \"贴子数\",\n        \"label-width\": $data.formLabelWidth\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.formForEdit.newsNumber,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.formForEdit.newsNumber = $event),\n          autocomplete: \"off\",\n          disabled: \"true\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"label-width\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createCommentVNode(\"删除板块弹窗，点击删除时才显示\"), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogFormVisibleForDelete,\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.dialogFormVisibleForDelete = $event),\n    title: \"删除板块\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_13, [_createVNode(_component_el_button, {\n      onClick: _cache[12] || (_cache[12] = $event => $data.dialogFormVisibleForDelete = false)\n    }, {\n      default: _withCtx(() => [_hoisted_14]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[13] || (_cache[13] = $event => $options.conformDelete())\n    }, {\n      default: _withCtx(() => [_hoisted_15]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_hoisted_12]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_createVNode","_component_el_button","type","onClick","$options","_hoisted_2","_component_el_table","data","$data","border","_component_el_table_column","prop","label","width","align","key","default","scope","size","delete","row","edit","_createCommentVNode","_component_el_pagination","background","layout","total","currentPage","$event","onCurrentChange","_component_el_dialog","title","footer","_component_el_form","model","_component_el_form_item","_component_el_input","name","autocomplete","oldName","disabled","newName","newsNumber","_hoisted_12"],"sourceRoot":"","sources":["/Users/wangjin/Desktop/newspublisher/Vue/src/views/admin/FreeType.vue"],"sourcesContent":["<template>\n  <el-button type=\"primary\" class=\"el1\" @click=\"add()\">新增板块</el-button>\n  <span class=\"sp1\">提示：0代表固定板块，1代表可变板块</span>\n  <div class=\"dF\">\n    <el-table :data=\"tableData\" border class=\"el2\">\n      <el-table-column prop=\"name\" label=\"板块名\" width=\"300\" align=\"center\" />\n      <el-table-column prop=\"newsNumber\" label=\"新闻数量\" width=\"300\" align=\"center\" />\n      <el-table-column prop=\"state\" label=\"板块状态\" width=\"300\" align=\"center\" />\n      <el-table-column label=\"操作\" width=\"\" align=\"center\" key=\"slot\">\n        <!--此处使用了插槽，来实现获得某行的对象-->\n        <template #default=\"scope\" >\n          <el-button type=\"text\" size=\"big\" @click=\"this.delete(scope.row)\">删除</el-button>\n          <el-button type=\"text\" size=\"big\" @click=\"this.edit(scope.row)\">修改</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!--分页组件-->\n    <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        v-model:currentPage=\"currentPage\"\n        @current-change=\"handleCurrentChange\"\n        class=\"el3\">\n    </el-pagination>\n  </div>\n  <!--新增板块弹窗，点击新增时才显示-->\n  <el-dialog v-model=\"dialogFormVisible\" title=\"新增板块\">\n    <el-form :model=\"form\">\n      <el-form-item label=\"板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformAdd()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  <!--修改板块弹窗，点击修改时才显示-->\n  <el-dialog v-model=\"dialogFormVisibleForEdit\" title=\"修改板块\">\n    <el-form :model=\"formForEdit\">\n      <el-form-item label=\"原板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.oldName\" autocomplete=\"off\" disabled=\"true\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"新板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.newName\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"贴子数\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.newsNumber\" autocomplete=\"off\" disabled=\"true\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisibleForEdit = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformEdit()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  <!--删除板块弹窗，点击删除时才显示-->\n  <el-dialog v-model=\"dialogFormVisibleForDelete\" title=\"删除板块\">\n    <span>是否确认删除该板块？</span>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisibleForDelete = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformDelete()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport request from \"../../utils/request\";\nimport {ElMessage} from \"element-plus\";\n\nexport default {\n  name: \"FreeType\",\n  data() {\n    let row;\n    return {\n      tableData: [\n\n      ],\n      form: {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      },\n      formForEdit: {\n        oldName: '',\n        newName: '',\n        newsNumber: 0\n      },\n      formLabelWidth: 100,\n      dialogFormVisible: false,\n      dialogFormVisibleForEdit: false,\n      total: 0,\n      pageSize: 5,\n      currentPage: 1,\n      dialogFormVisibleForDelete: false,\n      row,\n    }\n  },\n  created() {\n    //初始时加载表格数据\n    this.loadData()\n  },\n  methods: {\n    //当前页改变\n    handleCurrentChange() {\n      this.loadData()\n    },\n    //删除板块\n    delete(row) {\n      this.row = row\n      this.dialogFormVisibleForDelete = true\n    },\n    //确认删除\n    conformDelete() {\n      request.post(\"/type/delete\",this.row).then(res =>{\n        if (res.code===\"1\") {\n          ElMessage({\n            type: 'error',\n            message: '该板块存在帖子，无法删除'\n          })\n        }else {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          })\n        }\n        this.loadData()\n        this.dialogFormVisibleForDelete = false\n      })\n    },\n    //修改板块名\n    edit(row) {\n      this.formForEdit.oldName = row.name\n      this.formForEdit.newName = ''\n      this.formForEdit.newsNumber = row.newsNumber\n      this.dialogFormVisibleForEdit = true\n    },\n    //确定修改板块\n    conformEdit() {\n      if (this.formForEdit.newName===''||this.formForEdit.newName===null) {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        })\n      }else {\n        request.get(\"/type/edit\",{\n          params: {\n            oldName: this.formForEdit.oldName,\n            newName: this.formForEdit.newName,\n            newsNumber: this.formForEdit.newsNumber\n          }\n        }).then(res => {\n          if (res.code===\"1\") {   //更新失败\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            })\n          }else {\n            ElMessage({\n              type: 'success',\n              message: '修改成功'\n            })\n          }\n          this.loadData()  //重新加载数据\n          this.dialogFormVisibleForEdit = false\n        })\n      }\n    },\n    //点击新增按钮\n    add() {\n      //首先将表单数据置为空值，防止上次的数据残留造成影响\n      this.form = {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      }\n      //让新增对话框显示\n      this.dialogFormVisible = true\n    },\n    //确认新增板块\n    conformAdd() {\n      //先判断输入是否为空\n      if (this.form.name===null||this.form.name==='') {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        })\n      }else {\n        //将表单对象通过调用接口传递到后端，通过后端写入数据库\n        request.post(\"/type/add\",this.form).then(res =>{\n          if (res.code===\"0\") {\n            ElMessage({\n              type: 'success',\n              message: '新增成功'\n            })\n            //重新加载表格数据，使新插入的数据显示\n            this.loadData()\n            this.dialogFormVisible = false\n          }else {\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            })\n            this.dialogFormVisible = false\n          }\n        })\n      }\n    },\n    //加载表格数据，调用接口从后端获取可变板块的板块名和新闻数\n    loadData() {\n      request.get(\"/type/getFreeType\",{\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize\n        }\n      }).then(res =>{\n        this.total = res.data.total\n        this.tableData = res.data.records\n      })\n    }\n  },\n}\n</script>\n\n<style scoped>\n.el1{\n  position: absolute;left: 5%;margin-top: 50px;\n}\n.sp1{\n  position: absolute;margin-top: 60px;left: 15%;font-size: 13px;color: red;\n}\n.dF{\n  width: 90%;position: absolute;left: 5%;right: 5%;margin-top: 100px;\n}\n.el2{\n  width: 100%;\n}\n.el3{\n  margin-top: 15px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}