{"ast":null,"code":"import request from \"../../utils/request\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  name: \"FreeType\",\n\n  data() {\n    let row;\n    return {\n      tableData: [],\n      form: {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      },\n      formForEdit: {\n        oldName: '',\n        newName: '',\n        newsNumber: 0\n      },\n      formLabelWidth: 100,\n      dialogFormVisible: false,\n      dialogFormVisibleForEdit: false,\n      total: 0,\n      pageSize: 5,\n      currentPage: 1,\n      dialogFormVisibleForDelete: false,\n      row\n    };\n  },\n\n  created() {\n    //初始时加载表格数据\n    this.loadData();\n  },\n\n  methods: {\n    //当前页改变\n    handleCurrentChange() {\n      this.loadData();\n    },\n\n    //删除板块\n    delete(row) {\n      this.row = row;\n      this.dialogFormVisibleForDelete = true;\n    },\n\n    //确认删除\n    conformDelete() {\n      request.post(\"/type/delete\", this.row).then(res => {\n        if (res.code === \"1\") {\n          ElMessage({\n            type: 'error',\n            message: '该板块存在帖子，无法删除'\n          });\n        } else {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          });\n        }\n\n        this.loadData();\n        this.dialogFormVisibleForDelete = false;\n      });\n    },\n\n    //修改板块名\n    edit(row) {\n      this.formForEdit.oldName = row.name;\n      this.formForEdit.newName = '';\n      this.formForEdit.newsNumber = row.newsNumber;\n      this.dialogFormVisibleForEdit = true;\n    },\n\n    //确定修改板块\n    conformEdit() {\n      if (this.formForEdit.newName === '' || this.formForEdit.newName === null) {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        });\n      } else {\n        request.get(\"/type/edit\", {\n          params: {\n            oldName: this.formForEdit.oldName,\n            newName: this.formForEdit.newName,\n            newsNumber: this.formForEdit.newsNumber\n          }\n        }).then(res => {\n          if (res.code === \"1\") {\n            //更新失败\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            });\n          } else {\n            ElMessage({\n              type: 'success',\n              message: '修改成功'\n            });\n          }\n\n          this.loadData(); //重新加载数据\n\n          this.dialogFormVisibleForEdit = false;\n        });\n      }\n    },\n\n    //点击新增按钮\n    add() {\n      //首先将表单数据置为空值，防止上次的数据残留造成影响\n      this.form = {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      }; //让新增对话框显示\n\n      this.dialogFormVisible = true;\n    },\n\n    //确认新增板块\n    conformAdd() {\n      //先判断输入是否为空\n      if (this.form.name === null || this.form.name === '') {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        });\n      } else {\n        //将表单对象通过调用接口传递到后端，通过后端写入数据库\n        request.post(\"/type/add\", this.form).then(res => {\n          if (res.code === \"0\") {\n            ElMessage({\n              type: 'success',\n              message: '新增成功'\n            }); //重新加载表格数据，使新插入的数据显示\n\n            this.loadData();\n            this.dialogFormVisible = false;\n          } else {\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            });\n            this.dialogFormVisible = false;\n          }\n        });\n      }\n    },\n\n    //加载表格数据，调用接口从后端获取可变板块的板块名和新闻数\n    loadData() {\n      request.get(\"/type/getFreeType\", {\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        this.total = res.data.total;\n        this.tableData = res.data.records;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","ElMessage","name","data","row","tableData","form","newsNumber","state","formForEdit","oldName","newName","formLabelWidth","dialogFormVisible","dialogFormVisibleForEdit","total","pageSize","currentPage","dialogFormVisibleForDelete","created","loadData","methods","handleCurrentChange","delete","conformDelete","post","then","res","code","type","message","edit","conformEdit","get","params","add","conformAdd","records"],"sourceRoot":"","sources":["/Users/wangjin/Desktop/newspublisher/Vue/src/views/admin/FreeType.vue"],"sourcesContent":["<template>\n  <el-button type=\"primary\" class=\"el1\" @click=\"add()\">新增板块</el-button>\n  <span class=\"sp1\">提示：0代表固定板块，1代表可变板块</span>\n  <div class=\"dF\">\n    <el-table :data=\"tableData\" border class=\"el2\">\n      <el-table-column prop=\"name\" label=\"板块名\" width=\"300\" align=\"center\" />\n      <el-table-column prop=\"newsNumber\" label=\"新闻数量\" width=\"300\" align=\"center\" />\n      <el-table-column prop=\"state\" label=\"板块状态\" width=\"300\" align=\"center\" />\n      <el-table-column label=\"操作\" width=\"\" align=\"center\" key=\"slot\">\n        <!--此处使用了插槽，来实现获得某行的对象-->\n        <template #default=\"scope\" >\n          <el-button type=\"text\" size=\"big\" @click=\"this.delete(scope.row)\">删除</el-button>\n          <el-button type=\"text\" size=\"big\" @click=\"this.edit(scope.row)\">修改</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!--分页组件-->\n    <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        v-model:currentPage=\"currentPage\"\n        @current-change=\"handleCurrentChange\"\n        class=\"el3\">\n    </el-pagination>\n  </div>\n  <!--新增板块弹窗，点击新增时才显示-->\n  <el-dialog v-model=\"dialogFormVisible\" title=\"新增板块\">\n    <el-form :model=\"form\">\n      <el-form-item label=\"板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformAdd()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  <!--修改板块弹窗，点击修改时才显示-->\n  <el-dialog v-model=\"dialogFormVisibleForEdit\" title=\"修改板块\">\n    <el-form :model=\"formForEdit\">\n      <el-form-item label=\"原板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.oldName\" autocomplete=\"off\" disabled=\"true\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"新板块名\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.newName\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"贴子数\" :label-width=\"formLabelWidth\">\n        <el-input v-model=\"formForEdit.newsNumber\" autocomplete=\"off\" disabled=\"true\"></el-input>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisibleForEdit = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformEdit()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  <!--删除板块弹窗，点击删除时才显示-->\n  <el-dialog v-model=\"dialogFormVisibleForDelete\" title=\"删除板块\">\n    <span>是否确认删除该板块？</span>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisibleForDelete = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"conformDelete()\">确定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport request from \"../../utils/request\";\nimport {ElMessage} from \"element-plus\";\n\nexport default {\n  name: \"FreeType\",\n  data() {\n    let row;\n    return {\n      tableData: [\n\n      ],\n      form: {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      },\n      formForEdit: {\n        oldName: '',\n        newName: '',\n        newsNumber: 0\n      },\n      formLabelWidth: 100,\n      dialogFormVisible: false,\n      dialogFormVisibleForEdit: false,\n      total: 0,\n      pageSize: 5,\n      currentPage: 1,\n      dialogFormVisibleForDelete: false,\n      row,\n    }\n  },\n  created() {\n    //初始时加载表格数据\n    this.loadData()\n  },\n  methods: {\n    //当前页改变\n    handleCurrentChange() {\n      this.loadData()\n    },\n    //删除板块\n    delete(row) {\n      this.row = row\n      this.dialogFormVisibleForDelete = true\n    },\n    //确认删除\n    conformDelete() {\n      request.post(\"/type/delete\",this.row).then(res =>{\n        if (res.code===\"1\") {\n          ElMessage({\n            type: 'error',\n            message: '该板块存在帖子，无法删除'\n          })\n        }else {\n          ElMessage({\n            type: 'success',\n            message: '删除成功'\n          })\n        }\n        this.loadData()\n        this.dialogFormVisibleForDelete = false\n      })\n    },\n    //修改板块名\n    edit(row) {\n      this.formForEdit.oldName = row.name\n      this.formForEdit.newName = ''\n      this.formForEdit.newsNumber = row.newsNumber\n      this.dialogFormVisibleForEdit = true\n    },\n    //确定修改板块\n    conformEdit() {\n      if (this.formForEdit.newName===''||this.formForEdit.newName===null) {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        })\n      }else {\n        request.get(\"/type/edit\",{\n          params: {\n            oldName: this.formForEdit.oldName,\n            newName: this.formForEdit.newName,\n            newsNumber: this.formForEdit.newsNumber\n          }\n        }).then(res => {\n          if (res.code===\"1\") {   //更新失败\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            })\n          }else {\n            ElMessage({\n              type: 'success',\n              message: '修改成功'\n            })\n          }\n          this.loadData()  //重新加载数据\n          this.dialogFormVisibleForEdit = false\n        })\n      }\n    },\n    //点击新增按钮\n    add() {\n      //首先将表单数据置为空值，防止上次的数据残留造成影响\n      this.form = {\n        name: '',\n        newsNumber: 0,\n        state: 1\n      }\n      //让新增对话框显示\n      this.dialogFormVisible = true\n    },\n    //确认新增板块\n    conformAdd() {\n      //先判断输入是否为空\n      if (this.form.name===null||this.form.name==='') {\n        ElMessage({\n          type: 'warning',\n          message: '板块名不能为空'\n        })\n      }else {\n        //将表单对象通过调用接口传递到后端，通过后端写入数据库\n        request.post(\"/type/add\",this.form).then(res =>{\n          if (res.code===\"0\") {\n            ElMessage({\n              type: 'success',\n              message: '新增成功'\n            })\n            //重新加载表格数据，使新插入的数据显示\n            this.loadData()\n            this.dialogFormVisible = false\n          }else {\n            ElMessage({\n              type: 'error',\n              message: '已存在该板块'\n            })\n            this.dialogFormVisible = false\n          }\n        })\n      }\n    },\n    //加载表格数据，调用接口从后端获取可变板块的板块名和新闻数\n    loadData() {\n      request.get(\"/type/getFreeType\",{\n        params: {\n          currentPage: this.currentPage,\n          pageSize: this.pageSize\n        }\n      }).then(res =>{\n        this.total = res.data.total\n        this.tableData = res.data.records\n      })\n    }\n  },\n}\n</script>\n\n<style scoped>\n.el1{\n  position: absolute;left: 5%;margin-top: 50px;\n}\n.sp1{\n  position: absolute;margin-top: 60px;left: 15%;font-size: 13px;color: red;\n}\n.dF{\n  width: 90%;position: absolute;left: 5%;right: 5%;margin-top: 100px;\n}\n.el2{\n  width: 100%;\n}\n.el3{\n  margin-top: 15px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}