{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e84ebe1c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"dF\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"p1\"\n}, \"用户登录\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"p2\"\n}, \"首次登录即自动注册\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"dS\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"获取验证码\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"登录\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeadOfWelcome = _resolveComponent(\"HeadOfWelcome\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"头部\"), _createVNode(_component_HeadOfWelcome), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_form, {\n    ref: \"ruleForm\",\n    model: $data.ruleForm,\n    rules: $data.rules,\n    \"label-width\": \"80px\",\n    class: \"demo-ruleForm\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"邮箱\",\n      prop: \"email\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.email,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.email = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"验证码\",\n      prop: \"verifyCode\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.verifyCode,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.verifyCode = $event),\n        class: \"el1\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[2] || (_cache[2] = $event => $options.sendVerifyCode()),\n        class: \"el2\"\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      class: \"el3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[3] || (_cache[3] = $event => $options.submitForm('ruleForm')),\n        class: \"el4\"\n      }, {\n        default: _withCtx(() => [_hoisted_6]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = $event => $options.resetForm('ruleForm')),\n        class: \"el5\"\n      }, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EAGOA,KAAK,EAAC;;;gEACTC,oBAAsB,GAAtB,EAAsB;EAAnBD,KAAK,EAAC;AAAa,CAAtB,EAAc,MAAd,EAAkB;AAAA;AAAlB;;gEACAC,oBAA2B,GAA3B,EAA2B;EAAxBD,KAAK,EAAC;AAAkB,CAA3B,EAAc,WAAd,EAAuB;AAAA;AAAvB;;;EACKA,KAAK,EAAC;;;iDAY2D;;iDAGM;;iDAChB;;;;;;;;;;;;;6DArB9DE,2BACAC,aAAgBC,wBAAhB,GACAH,oBAuBM,KAvBN,cAuBM,CAtBJI,UAsBI,EArBJC,UAqBI,EApBJL,oBAmBM,KAnBN,cAmBM,CAlBJE,aAiBUI,kBAjBV,EAiBU;IAhBNC,GAAG,EAAC,UAgBE;IAfLC,KAAK,EAAEC,cAeF;IAdLC,KAAK,EAAED,WAcF;IAbN,eAAY,MAaN;IAZNV,KAAK,EAAC;EAYA,CAjBV;sBAME,MAEe,CAFfG,aAEeS,uBAFf,EAEe;MAFDC,KAAK,EAAC,IAEL;MAFUC,IAAI,EAAC;IAEf,CAFf;wBACE,MAA8C,CAA9CX,aAA8CY,mBAA9C,EAA8C;oBAA3BL,eAASM,KAAkB;mEAA3BN,eAASM,QAAKC;MAAa,CAA9C;;MAAA,iBAA8C;;;;KADhD,CAEe,EACfd,aAGeS,uBAHf,EAGe;MAHDC,KAAK,EAAC,KAGL;MAHWC,IAAI,EAAC;IAGhB,CAHf;wBACE,MAA+D,CAA/DX,aAA+DY,mBAA/D,EAA+D;oBAA5CL,eAASQ,UAAmC;mEAA5CR,eAASQ,aAAUD,OAAyB;QAAvBjB,KAAK,EAAC;MAAiB,CAA/D;;MAAA,iBAA+D,EAC/DG,aAAiFgB,oBAAjF,EAAiF;QAAtEC,IAAI,EAAC,SAAiE;QAAtDC,OAAK,sCAAEC,yBAAF,CAAiD;QAA7BtB,KAAK,EAAC;MAAuB,CAAjF;0BAAgE,MAAK;;;;OAArE,CAD+D;;;;KADjE,CADe,EAKfG,aAGeS,uBAHf,EAGe;MAHDZ,KAAK,EAAC;IAGL,CAHf,EAAyB;wBACvB,MAAoF,CAApFG,aAAoFgB,oBAApF,EAAoF;QAAzEC,IAAI,EAAC,SAAoE;QAAzDC,OAAK,sCAAEC,oBAAU,UAAV,CAAF,CAAoD;QAA1BtB,KAAK,EAAC;MAAoB,CAApF;0BAAsE,MAAE;;;;OAAxE,CAAoF,EACpFG,aAAoEgB,oBAApE,EAAoE;QAAxDE,OAAK,sCAAEC,mBAAS,UAAT,CAAF,CAAmD;QAA1BtB,KAAK,EAAC;MAAoB,CAApE;0BAAsD,MAAE;;;;OAAxD,CADoF,EAD7D;;;;IAAA,CAAzB,CALe;;;;GARjB;;EAAA,qBAkBI,CAnBN,CAoBI,CAvBN","names":["class","_createElementVNode","_createCommentVNode","_createVNode","_component_HeadOfWelcome","_hoisted_2","_hoisted_3","_component_el_form","ref","model","$data","rules","_component_el_form_item","label","prop","_component_el_input","email","$event","verifyCode","_component_el_button","type","onClick","$options"],"sourceRoot":"","sources":["/Users/wangjin/Desktop/newspublisher/Vue/src/layout/UserLogin.vue"],"sourcesContent":["<template>\n  <!--头部-->\n  <HeadOfWelcome/>\n  <div class=\"dF\">\n    <p class=\"p1\">用户登录</p>\n    <p class=\"p2\">首次登录即自动注册</p>\n    <div class=\"dS\">\n      <el-form\n          ref=\"ruleForm\"\n          :model=\"ruleForm\"\n          :rules=\"rules\"\n          label-width=\"80px\"\n          class=\"demo-ruleForm\">\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"ruleForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"verifyCode\">\n          <el-input v-model=\"ruleForm.verifyCode\" class=\"el1\"></el-input>\n          <el-button type=\"primary\" @click=\"sendVerifyCode()\" class=\"el2\">获取验证码</el-button>\n        </el-form-item>\n        <el-form-item class=\"el3\">\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" class=\"el4\">登录</el-button>\n          <el-button @click=\"resetForm('ruleForm')\" class=\"el5\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HeadOfWelcome from \"../components/HeadOfWelcome\";\nimport request from \"../utils/request\";\nimport { ElMessage } from 'element-plus'   //Element-plus消息提示\n\nlet verify;   //验证码\nlet inputEmail;   //用户输入的邮箱\nlet state;  //用户是登录还是注册\n\nexport default {\n  name: \"UserLogin\",\n  components: {HeadOfWelcome},\n\n  data() {\n    return {\n      ruleForm: {\n        email: '',\n        verifyCode: '',\n      },\n      rules: {\n        email: [\n          {\n            required: true,\n            message: '请输入邮箱',\n            trigger: 'blur',\n          },\n        ],\n        verifyCode: [\n          {\n            required: true,\n            message: '请输入验证码',\n            trigger: 'change',\n          },\n        ],\n      },\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    //发送验证码\n    sendVerifyCode() {\n      if (this.ruleForm.email===''||this.ruleForm.email===null){  //如果邮箱为空\n        ElMessage({    //消息提示\n          type: \"warning\",\n          message: \"请输入邮箱\"\n        })\n      }else {\n        inputEmail = this.ruleForm.email\n        request.post(\"/user/sendEmail\",this.ruleForm.email).then(res =>{\n          ElMessage({    //消息提示\n            type: \"success\",\n            message: \"获取成功，请查收\"\n          })\n          verify = res.data\n          state = res.msg\n        })\n      }\n    },\n    //提交表单\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {    //如果表单不空\n          if (inputEmail!==this.ruleForm.email) {\n            ElMessage({    //消息提示\n              type: \"warning\",\n              message: \"请重新获取验证码\"\n            })\n          }else if (verify!==this.ruleForm.verifyCode) {  //获取表单中的数据要通过 ”this.ruleForm.属性“ 来实现\n            ElMessage({    //消息提示\n              type: \"warning\",\n              message: \"验证码错误\"\n            })\n          }else {\n            sessionStorage.setItem(\"userEmail\", JSON.stringify(this.ruleForm.email));  //将管理员的邮箱存储在session里\n            if (state===\"登录\") {\n              ElMessage({    //消息提示\n                type: \"success\",\n                message: \"登录成功\"\n              })\n              this.$router.push('/')  //回到首页\n            }else {\n              request.post(\"/user/logon\",this.ruleForm).then(res =>{\n                ElMessage({    //消息提示\n                  type: \"success\",\n                  message: \"注册成功，请完善个人信息\"\n                })\n                this.$router.push('/finishUserInfo')\n              })\n            }\n          }\n        } else {            //如果表单为空\n          return false\n        }\n      })\n    },\n    //重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n</script>\n\n<style scoped>\n.dF{\n  background: white;position: absolute;width: 100%;left: 50%;top: calc(50% + 25px);transform: translate(-50%,-50%);height: calc(100% - 50px);\n}\n.p1{\n  text-align: center;font-size: 22px;color: rgb(64, 158, 255);position: absolute;left: 30%;right: 30%;width: 40%;margin-top: 70px;padding: 10px;\n}\n.p2{\n  text-align: center;font-size: 14px;color: rgb(64, 158, 255);position: absolute;left: 30%;right: 30%;width: 40%;margin-top: 110px;padding: 10px;\n}\n.dS{\n  position: absolute;left: 33%;width: 30%;right: 35%;margin-top: 160px;\n}\n.el1{\n  width: 45%;margin-right: 5%;\n}\n.el2{\n  width: 50%;\n}\n.el3{\n  display:block;\n}\n.el4{\n  width: 40%;\n}\n.el5{\n  width: 40%;margin-left: 20%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}